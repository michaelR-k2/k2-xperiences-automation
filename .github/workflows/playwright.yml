name: Playwright Tests

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]
  workflow_dispatch:

jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: lts/*

    - name: Create .env file
      run: |
        echo "BASEURL=${{ secrets.BASEURL }}" >> .env
        echo "USER_EMAIL=${{ secrets.USER_EMAIL }}" >> .env
        echo "USER_PASSWORD=${{ secrets.USER_PASSWORD }}" >> .env

    - name: Install dependencies
      run: npm ci

    - name: Install Playwright Browsers
      run: npx playwright install --with-deps

    - name: Install Allure CLI
      run: npm i -D allure-commandline

    - name: Restore Allure history (Para tendencias)
      uses: actions/cache@v3
      with:
        path: allure-history
        key: allure-history-${{ github.run_id }}
        restore-keys: |
          allure-history-

    - name: Copy previous history (Si existe)
      run: |
        if [ -d allure-history ]; then
          mkdir -p allure-results/history
          cp -r allure-history/* allure-results/history/
        fi

    - name: Run Playwright tests
      run: npx playwright test --reporter=allure-playwright || true
      env:
        BASEURL: ${{ secrets.BASEURL }}
        USER_EMAIL: ${{ secrets.USER_EMAIL }}
        USER_PASSWORD: ${{ secrets.USER_PASSWORD }}

    - name: Agregar executor.json (opcional)
      run: |
        echo '{
          "name": "GitHub Actions",
          "type": "CI",
          "url": "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}",
          "buildOrder": 1,
          "buildName": "${{ github.workflow }}",
          "buildUrl": "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
        }' > allure-results/executor.json
        echo "✅ Executor info agregada"

    - name: Agregar categorías a Allure
      run: |
        echo "Archivos disponibles en el root:"
        ls -la
        mkdir -p allure-results
        cp categories.json allure-results/categories.json
        echo "✅ Categorías copiadas a allure-results"
    
    - name: Set Allure Environment Info
      run: |
        echo "Environment=Desarrollo (DEV)" >> ./allure-results/environment.properties
        echo "Build= 1.1.0" >> ./allure-results/environment.properties
        echo "Platform= Windows" >> ./allure-results/environment.properties
        echo "Browser=Chromium | Firefox" >> ./allure-results/environment.properties
        echo "URL= https://xperiencesdev.masamo.tech/" >> ./allure-results/environment.properties
        echo "Project_Name= K2 Xperiences Automation" >> ./allure-results/environment.properties
        echo "Author= Michael Rodriguez (QA Analyst)" >> ./allure-results/environment.properties
        echo "Test_Runner= Playwright" >> ./allure-results/environment.properties
        echo "Node_Version= $(node -v)" >> ./allure-results/environment.properties
        echo "Timezone= $(date +%Z)" >> ./allure-results/environment.properties

    - name: Generate Allure Report
      run: npx allure-commandline generate allure-results --clean -o allure-report

    - name: Save Allure history (Para próximas ejecuciones)
      run: |
        mkdir -p allure-history
        cp -r allure-report/history/* allure-history/

    - name: Upload Allure Results (Raw Data)
      uses: actions/upload-artifact@v4
      with:
        name: allure-results
        path: allure-results/
        retention-days: 30

    - name: Upload Allure Report (HTML)
      uses: actions/upload-artifact@v4
      with:
        name: allure-report
        path: allure-report/
        retention-days: 30

  deploy:
    if: always() && github.ref == 'refs/heads/main'
    needs: test  
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Download Allure Report
      uses: actions/download-artifact@v4
      with:
        name: allure-report
        path: allure-report

    - name: Clean large attachments
      run: rm -rf allure-report/data/attachments

    - name: Deploy to GitHub Pages
      uses: JamesIves/github-pages-deploy-action@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        branch: gh-pages
        folder: allure-report
        target-folder: .
